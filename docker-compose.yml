version: '2'

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper-server:
    image: 'wurstmeister/zookeeper:latest'
    networks:
      - kafka-net
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka-server:
    image: 'wurstmeister/kafka:latest'
    networks:
      - kafka-net
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-server
  postgress:
    image: postgres
    ports: 
      -  '5432:5432'
    volumes:
      - ./Database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./Database/accounts.sql:/docker-entrypoint-initdb.d/2-accounts.sql
      - ./Database/custom.sql:/docker-entrypoint-initdb.d/3-custom.sql
    networks:
      - kafka-net
    environment:
      POSTGRES_USER: 'tech'
      POSTGRES_PASSWORD: 'test'
      POSTGRES_DB: 'payments'
  api-producer:
    build: ./ApiAndProducer
    ports:
      - "9000:8080"
    networks:
      - kafka-net
    volumes:
      - ./ApiAndProducer/bin:/app/
    command: ["./wait-for-it.sh", "postgress:5432","kafka-server:9092","-t","100", "--", "java", "-jar", "app.jar"]
    depends_on:
      - postgress
      - kafka-server